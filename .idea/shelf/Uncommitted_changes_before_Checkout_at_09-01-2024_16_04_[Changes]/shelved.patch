Index: app/src/main/java/com/example/myapplication/views/SimpleBoardGameInfoActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication\r\n\r\n\r\nimport androidx.compose.animation.animateContentSize\r\nimport androidx.compose.foundation.ExperimentalFoundationApi\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.pager.VerticalPager\r\nimport androidx.compose.foundation.pager.rememberPagerState\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.AddCircle\r\nimport androidx.compose.material.icons.filled.Check\r\nimport androidx.compose.material.icons.filled.Close\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.KeyboardArrowDown\r\nimport androidx.compose.material.icons.filled.KeyboardArrowUp\r\nimport androidx.compose.material.icons.filled.MoreVert\r\nimport androidx.compose.material.icons.filled.PlayArrow\r\nimport androidx.compose.material.icons.filled.Star\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.rememberCoroutineScope\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.alpha\r\nimport androidx.compose.ui.draw.blur\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.draw.drawWithContent\r\nimport androidx.compose.ui.draw.scale\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.ColorFilter\r\nimport androidx.compose.ui.graphics.ColorMatrix\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.platform.LocalLifecycleOwner\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavHostController\r\nimport coil.compose.AsyncImage\r\nimport com.example.myapplication.modelviews.BoardGameInfoActivity\r\nimport com.example.myapplication.modelviews.RatingsViewModel\r\nimport com.example.myapplication.views.YoutubePlayer\r\nimport kotlinx.coroutines.launch\r\nimport BoardGameRepository\r\nimport android.util.Log\r\nimport androidx.lifecycle.viewModelScope\r\nimport kotlinx.coroutines.Dispatchers\r\n\r\n@OptIn(ExperimentalFoundationApi::class)\r\n@Composable\r\nfun SimpleBoardGameInfoActivity(navController: NavHostController,\r\n                                ratingsViewModel: RatingsViewModel,\r\n                                boardGameInfoActivity: BoardGameInfoActivity,\r\n                                gameID: String\r\n) {\r\n    val pagerState = rememberPagerState(initialPage = 0, pageCount = { 2 })\r\n    val coroutineScope = rememberCoroutineScope()\r\n    var selectedTabIndex by remember { mutableStateOf(0) }\r\n    var showYouTubePlayer by remember { mutableStateOf(false) }\r\n\r\n    LaunchedEffect(Unit) {\r\n        // Use LaunchedEffect peoples! Is much importante!\r\n        boardGameInfoActivity.fetchBoardGameData(gameID)\r\n        ratingsViewModel.fetchRatings(boardGameInfoActivity.currentGameID)\r\n    }\r\n\r\n\r\n\r\n    val colorMatrixDark = ColorMatrix().apply {\r\n        setToScale(0.2f, 0.2f, 0.2f, 1f)\r\n    }\r\n\r\n    var boardGame = boardGameInfoActivity.boardGameData // It IS a var. It will not work as intended as a val. Trust me bro\r\n    val textStyleBody1 = MaterialTheme.typography.headlineLarge\r\n    var textStyle by remember { mutableStateOf(textStyleBody1) }\r\n    var readyToDraw by remember { mutableStateOf(false) }\r\n\r\n    boardGameInfoActivity.fetchYoutubeID(boardGame.name)\r\n\r\n\r\n\r\n    // val boardGameIsFavourite by viewModel.isBoardGameFavourite.observeAsState()\r\n\r\n    AsyncImage(\r\n        model = boardGame.imageURL,\r\n        contentDescription = null,\r\n        contentScale = ContentScale.Crop,\r\n        alignment = Alignment.Center,\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .blur(30.dp)\r\n            .scale(1.5f)\r\n            .animateContentSize(),\r\n        colorFilter = ColorFilter.colorMatrix(colorMatrixDark),\r\n    )\r\n\r\n        VerticalPager(\r\n            modifier = Modifier.fillMaxSize(),\r\n            state = pagerState,\r\n            pageContent = { page ->\r\n                when (page) {\r\n                    0 -> {\r\n                        Box(modifier = Modifier.fillMaxSize()) {\r\n                            Column(\r\n                                modifier = Modifier\r\n                                    .fillMaxSize()\r\n                                    .padding(16.dp)\r\n                            ) {\r\n                                Spacer(modifier = Modifier.height(35.dp))\r\n                                Column(\r\n                                    modifier = Modifier\r\n                                        .fillMaxWidth()\r\n                                        .fillMaxHeight(0.9f)\r\n                                        .clip(RoundedCornerShape(20.dp))\r\n                                        .background(Color.Black)\r\n                                ) {\r\n                                    Text(\r\n                                        text = boardGame!!.name,\r\n                                        style = textStyle,\r\n                                        fontWeight = FontWeight.Bold,\r\n                                        modifier = Modifier\r\n                                            .fillMaxWidth()\r\n                                            .fillMaxHeight(0.2f)\r\n                                            .padding(0.dp)\r\n                                            .drawWithContent {\r\n                                                if (readyToDraw) drawContent()\r\n                                            },\r\n                                        textAlign = TextAlign.Center,\r\n                                        color = Color.White,\r\n                                        overflow = TextOverflow.Clip,\r\n                                        onTextLayout = { textLayoutResult ->\r\n                                            if (textLayoutResult.didOverflowHeight) {\r\n                                                textStyle =\r\n                                                    textStyle.copy(fontSize = textStyle.fontSize * 0.9)\r\n                                            } else {\r\n                                                readyToDraw = true\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    Box(\r\n                                        modifier = Modifier\r\n                                            .fillMaxHeight(0.67f)\r\n                                            .padding(10.dp)\r\n                                    ) {\r\n                                        AsyncImage(\r\n                                            model = boardGame.imageURL,\r\n                                            contentDescription = null,\r\n                                            contentScale = ContentScale.Crop,\r\n                                            alignment = Alignment.Center,\r\n                                            modifier = Modifier\r\n                                                .fillMaxSize()\r\n                                                .clip(CircleShape)\r\n                                        )\r\n                                        IconButton(\r\n                                            onClick = { showYouTubePlayer = true },\r\n                                            modifier = Modifier\r\n                                                .align(Alignment.Center)\r\n                                                .size(80.dp)\r\n                                        ) {\r\n                                            Icon(\r\n                                                imageVector = Icons.Filled.PlayArrow,\r\n                                                contentDescription = \"Localized description\",\r\n                                                tint = Color.White,\r\n                                                modifier = Modifier\r\n                                                    .fillMaxSize()\r\n                                                    .alpha(0.7f)\r\n                                            )\r\n                                        }\r\n                                        if (showYouTubePlayer) {\r\n                                            YoutubePlayer(youtubeVideoId = boardGameInfoActivity.youtubeID, lifecycleOwner = LocalLifecycleOwner.current)\r\n\r\n                                            // Close Button\r\n                                            IconButton(\r\n                                                onClick = { showYouTubePlayer = false},\r\n                                                modifier = Modifier\r\n                                                    .align(Alignment.TopEnd)\r\n                                                    .padding(16.dp)\r\n                                            ) {\r\n                                                Icon(imageVector = Icons.Default.Close, contentDescription = \"Close\", tint = Color.White)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    Row(\r\n                                        modifier = Modifier\r\n                                            .fillMaxHeight(0.8f)\r\n                                            .padding(10.dp)\r\n                                            .fillMaxWidth(0.5f)\r\n                                            .align(Alignment.CenterHorizontally)\r\n                                            .background(Color.Transparent),\r\n                                        horizontalArrangement = Arrangement.SpaceEvenly,\r\n                                    ) {\r\n                                        Column(\r\n                                            modifier = Modifier\r\n                                                .fillMaxHeight()\r\n                                                .fillMaxWidth(0.5f),\r\n                                            verticalArrangement = Arrangement.SpaceAround,\r\n                                            horizontalAlignment = Alignment.CenterHorizontally\r\n\r\n                                        ) {\r\n                                            Image(\r\n                                                painter = painterResource(id = R.drawable.people_alt),\r\n                                                contentDescription = null,\r\n                                                colorFilter = ColorFilter.tint(Color.White)\r\n                                            )\r\n                                            Text(\r\n                                                text = \"${boardGame.minPlayers} - ${boardGame.maxPlayers}\",\r\n                                                style = MaterialTheme.typography.bodyLarge,\r\n                                                modifier = Modifier.fillMaxWidth(),\r\n                                                textAlign = TextAlign.Center,\r\n                                                fontWeight = FontWeight.Bold,\r\n                                                color = Color.White\r\n                                            )\r\n\r\n                                            Image(\r\n                                                painter = painterResource(id = R.drawable.av_timer),\r\n                                                contentDescription = null,\r\n                                                colorFilter = ColorFilter.tint(Color.White)\r\n                                            )\r\n                                            Text(\r\n                                                text = \"${boardGame.playingTime} min.\",\r\n                                                style = MaterialTheme.typography.bodyLarge,\r\n                                                modifier = Modifier.fillMaxWidth(),\r\n                                                textAlign = TextAlign.Center,\r\n                                                fontWeight = FontWeight.Bold,\r\n                                                color = Color.White\r\n                                            )\r\n\r\n                                        }\r\n                                        Column(\r\n                                            modifier = Modifier\r\n                                                .fillMaxHeight()\r\n                                                .fillMaxWidth(1f),\r\n                                            verticalArrangement = Arrangement.SpaceAround,\r\n                                            horizontalAlignment = Alignment.CenterHorizontally\r\n                                        ) {\r\n                                            Image(\r\n                                                painter = painterResource(id = R.drawable.elderly),\r\n                                                contentDescription = null,\r\n                                                colorFilter = ColorFilter.tint(Color.White)\r\n                                            )\r\n                                            Text(\r\n                                                text = \"${boardGame.age}+\",\r\n                                                style = MaterialTheme.typography.bodyLarge,\r\n                                                modifier = Modifier.fillMaxWidth(),\r\n                                                textAlign = TextAlign.Center,\r\n                                                fontWeight = FontWeight.Bold,\r\n                                                color = Color.White\r\n                                            )\r\n\r\n                                            Image(\r\n                                                painter = painterResource(id = R.drawable.fitness_center),\r\n                                                contentDescription = null,\r\n                                                colorFilter = ColorFilter.tint(Color.White)\r\n                                            )\r\n                                            Text(\r\n                                                text = boardGame.averageWeight,\r\n                                                style = MaterialTheme.typography.bodyLarge,\r\n                                                modifier = Modifier.fillMaxWidth(),\r\n                                                textAlign = TextAlign.Center,\r\n                                                fontWeight = FontWeight.Bold,\r\n                                                color = Color.White\r\n                                            )\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            Box(modifier = Modifier.fillMaxSize()) {\r\n                                Box(\r\n                                    modifier = Modifier\r\n                                        .padding(30.dp)\r\n                                        .fillMaxWidth(0.85f)\r\n                                        .fillMaxHeight(0.863f)\r\n                                        .align(Alignment.TopCenter)\r\n                                ) {\r\n                                    Icon(\r\n                                        imageVector = Icons.Filled.Check,\r\n                                        contentDescription = \"contentDescription\",\r\n                                        modifier = Modifier\r\n                                            .size(45.dp)\r\n                                            .background(Color.DarkGray, CircleShape)\r\n                                            .align(Alignment.BottomStart),\r\n                                        tint = Color.DarkGray\r\n                                    )\r\n                                    Icon(\r\n                                        imageVector = Icons.Filled.MoreVert,\r\n                                        contentDescription = \"contentDescription\",\r\n                                        modifier = Modifier\r\n                                            .size(45.dp)\r\n                                            .background(Color.DarkGray, CircleShape)\r\n                                            .align(Alignment.BottomEnd)\r\n                                            .clickable { },\r\n                                        tint = Color.White,\r\n                                    )\r\n                                }\r\n                                Row(\r\n                                    modifier = Modifier\r\n                                        .padding(30.dp)\r\n                                        .fillMaxWidth(0.798f)\r\n                                        .fillMaxHeight(0.845f)\r\n                                        .align(Alignment.TopCenter)\r\n                                ) {\r\n                                    Text(\r\n                                        text = boardGame.ratingBGG,\r\n                                        style = MaterialTheme.typography.bodyLarge,\r\n                                        modifier = Modifier\r\n                                            .fillMaxWidth(0.5f)\r\n                                            .align(Alignment.Bottom),\r\n                                        textAlign = TextAlign.Start,\r\n                                        fontWeight = FontWeight.Bold,\r\n                                        color = Color.White,\r\n                                        fontSize = 16.sp\r\n                                    )\r\n                                }\r\n                                Box(\r\n                                    modifier = Modifier\r\n                                        .padding(30.dp)\r\n                                        .fillMaxWidth(1f)\r\n                                        .fillMaxHeight(0.963f)\r\n                                        .align(Alignment.TopCenter)\r\n                                ) {\r\n                                    Icon(\r\n                                        imageVector = Icons.Filled.KeyboardArrowDown,\r\n                                        contentDescription = \"contentDescription\",\r\n                                        modifier = Modifier\r\n                                            .size(60.dp)\r\n                                            .background(Color.DarkGray, CircleShape)\r\n                                            .align(Alignment.BottomCenter)\r\n                                            .clickable {\r\n                                                coroutineScope.launch {\r\n                                                    pagerState.animateScrollToPage(1)\r\n                                                }\r\n                                            },\r\n                                        tint = Color.White,\r\n                                    )\r\n                                }\r\n                                Box(\r\n                                    modifier = Modifier\r\n                                        .padding(30.dp)\r\n                                        .fillMaxWidth(0.693f)\r\n                                        .fillMaxHeight(0.823f)\r\n                                        .align(Alignment.TopCenter)\r\n                                ) {\r\n                                    Icon(\r\n                                        imageVector = Icons.Filled.Star,\r\n                                        contentDescription = \"contentdescription\",\r\n                                        modifier = Modifier\r\n                                            .size(25.dp)\r\n                                            .align(Alignment.BottomStart)\r\n                                            .background(Color.Gray, CircleShape)\r\n                                            .clickable { },\r\n                                        tint = Color.White\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    1 -> {\r\n                        Box(modifier = Modifier.fillMaxSize()) {\r\n                            Column(\r\n                                modifier = Modifier\r\n                                    .fillMaxSize()\r\n                                    .padding(16.dp),\r\n                                verticalArrangement = Arrangement.Center\r\n                            ) {\r\n                                Box(\r\n                                    modifier = Modifier\r\n                                        .fillMaxWidth()\r\n                                        .fillMaxHeight(0.6f)\r\n                                        .padding(10.dp)\r\n                                        .clip(RoundedCornerShape(10.dp))\r\n                                        .background(MaterialTheme.colorScheme.background)\r\n                                        .align(Alignment.CenterHorizontally),\r\n                                ) {\r\n                                    Column() {\r\n                                        tabView(\r\n                                            texts = listOf(\r\n                                                \"Description\",\r\n                                                \"General Info\",\r\n                                                \"BoardBandit Rating\"\r\n                                            ),\r\n\r\n                                            ) {\r\n                                            selectedTabIndex = it;\r\n                                        }\r\n                                        when (selectedTabIndex) {\r\n                                            0 -> description(\r\n                                                boardGame\r\n                                            )\r\n\r\n                                            1 -> generalInfo(\r\n                                                boardGame\r\n                                            )\r\n\r\n                                            2 -> ratingTab(\r\n                                                boardGame, ratingsViewModel\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Row {\r\n                                Box(\r\n                                    modifier = Modifier\r\n                                        .padding(30.dp)\r\n                                        .fillMaxWidth(1f)\r\n                                        .fillMaxHeight(0.225f)\r\n                                        .align(Alignment.CenterVertically)\r\n                                ) {\r\n                                    Icon(\r\n                                        imageVector = Icons.Filled.KeyboardArrowUp,\r\n                                        contentDescription = \"contentDescription\",\r\n                                        modifier = Modifier\r\n                                            .size(60.dp)\r\n                                            .background(Color.DarkGray, CircleShape)\r\n                                            .align(Alignment.BottomCenter)\r\n                                            .clickable {\r\n                                                coroutineScope.launch {\r\n                                                    pagerState.animateScrollToPage(0)\r\n                                                }\r\n                                            },\r\n                                        tint = Color.White,\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        Button(\r\n            onClick = {\r\n                navController.popBackStack()\r\n            },\r\n            modifier = Modifier\r\n                .width(60.dp)\r\n                .height(60.dp)\r\n                .padding(8.dp),\r\n            colors = ButtonDefaults.buttonColors(Color.Transparent)\r\n        ) {\r\n        }\r\n        Image(\r\n            painter = painterResource(id = R.drawable.ic_action_name),\r\n            contentDescription = null,\r\n            modifier = Modifier\r\n                .padding(18.dp)\r\n        )\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/views/SimpleBoardGameInfoActivity.kt b/app/src/main/java/com/example/myapplication/views/SimpleBoardGameInfoActivity.kt
--- a/app/src/main/java/com/example/myapplication/views/SimpleBoardGameInfoActivity.kt	(revision 79d947e8a2e98db8d6d11b00a19a5503ce2bf8be)
+++ b/app/src/main/java/com/example/myapplication/views/SimpleBoardGameInfoActivity.kt	(date 1704812609930)
@@ -320,6 +320,34 @@
                                             .clickable { },
                                         tint = Color.White,
                                     )
+                                    IconButton(
+                                        onClick = { showYouTubePlayer = true },
+                                        modifier = Modifier
+                                            .align(Alignment.Center)
+                                            .size(80.dp)
+                                    ) {
+                                        Icon(
+                                            imageVector = Icons.Filled.PlayArrow,
+                                            contentDescription = "Localized description",
+                                            tint = Color.White,
+                                            modifier = Modifier
+                                                .fillMaxSize()
+                                                .alpha(0.7f)
+                                        )
+                                    }
+                                    if (showYouTubePlayer) {
+                                        YoutubePlayer(youtubeVideoId = boardGameInfoActivity.youtubeID, lifecycleOwner = LocalLifecycleOwner.current)
+
+                                        // Close Button
+                                        IconButton(
+                                            onClick = { showYouTubePlayer = false},
+                                            modifier = Modifier
+                                                .align(Alignment.TopEnd)
+                                                .padding(16.dp)
+                                        ) {
+                                            Icon(imageVector = Icons.Default.Close, contentDescription = "Close", tint = Color.White)
+                                        }
+                                    }
                                 }
                                 Row(
                                     modifier = Modifier
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"$PROJECT_DIR$/../../../../../../../ProgramData/chocolatey/lib/gradle/tools/gradle-8.4\" />\r\n        <option name=\"gradleJvm\" value=\"jbr-17\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 79d947e8a2e98db8d6d11b00a19a5503ce2bf8be)
+++ b/.idea/gradle.xml	(date 1704812633575)
@@ -4,6 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="testRunner" value="GRADLE" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleHome" value="$PROJECT_DIR$/../../../../../../../ProgramData/chocolatey/lib/gradle/tools/gradle-8.4" />
         <option name="gradleJvm" value="jbr-17" />
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <runningDeviceTargetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"RUNNING_DEVICE_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"$USER_HOME$/.android/avd/Pixel_7_Pro_API_31.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </runningDeviceTargetSelectedWithDropDown>\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"$USER_HOME$/.android/avd/Pixel_7_Pro_API_31.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2024-01-09T12:26:32.915017Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 79d947e8a2e98db8d6d11b00a19a5503ce2bf8be)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1704812633584)
@@ -1,17 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="$USER_HOME$/.android/avd/Pixel_7_Pro_API_31.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
     <targetSelectedWithDropDown>
       <Target>
         <type value="QUICK_BOOT_TARGET" />
